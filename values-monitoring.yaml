# Monitoring configuration for Rocket.Chat with Grafana Cloud
# This file configures Prometheus Agent to scrape metrics and send to Grafana Cloud

prometheus:
  enabled: true
  agentMode: true
  
  prometheusSpec:
    # External labels to identify this cluster in Grafana Cloud
    externalLabels:
      cluster: rocketchat-k3s-lab
      environment: lab
    
    # Remote write configuration for Grafana Cloud
    remoteWrite:
      - url: https://prometheus-blocks-prod-us-central1.grafana.net/api/prom/push
        basicAuth:
          username:
            name: grafana-cloud-secret
            key: username
          password:
            name: grafana-cloud-secret
            key: password
        queueConfig:
          capacity: 5000
          maxShards: 50
          minShards: 1
          maxSamplesPerSend: 2000
          batchSendDeadline: 5s
          minBackoff: 100ms
          maxBackoff: 1s
    
    # Resource limits for lab environment
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 200m
        memory: 256Mi
    
    # Storage not needed in agent mode (remote write only)
    storage: {}
    
    # Scrape configuration
    scrapeInterval: 30s
    evaluationInterval: 30s
    
    # Additional scrape configs for Rocket.Chat and NATS
    additionalScrapeConfigs:
      # Rocket.Chat metrics
      - job_name: 'rocketchat'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - rocketchat
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name
      
      # NATS metrics
      - job_name: 'nats'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - rocketchat
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
            action: keep
            regex: nats
          - source_labels: [__address__]
            action: replace
            regex: ([^:]+)(?::\d+)?
            replacement: $1:7777
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)

# Disable Grafana - we're using Grafana Cloud
grafana:
  enabled: false

# Enable kube-state-metrics for cluster metrics
kubeStateMetrics:
  enabled: true

# Enable node-exporter for node metrics  
nodeExporter:
  enabled: true

# Disable AlertManager - alerts will be handled in Grafana Cloud
alertmanager:
  enabled: false

# ServiceMonitor for Rocket.Chat
serviceMonitor:
  enabled: true
  namespace: rocketchat
  selector:
    matchLabels:
      app.kubernetes.io/name: rocketchat
  endpoints:
    - port: http-metrics
      path: /metrics
      interval: 30s